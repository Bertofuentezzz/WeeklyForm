{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","email","setEmail","password","setPassword","item","setItem","useEffect","data","localStorage","getItem","JSON","parse","stringify","className","id","class","src","alt","onSubmit","e","preventDefault","placeholder","type","name","value","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAkEeA,MA9Df,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGmBF,mBAAS,IAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAIWJ,mBAAS,IAJpB,mBAINK,EAJM,KAIAC,EAJA,KA6Bb,OAbAC,qBAAU,WACR,IAAMC,EAAOC,aAAaC,QAAQ,QAC9BF,GACFF,EAAQK,KAAKC,MAAMJ,MAGpB,IAGHD,qBAAU,WACRE,aAAaH,QAAQ,OAAQK,KAAKE,UAAUR,OAI5C,qBAAKS,UAAU,MAAf,SACE,yBAASC,GAAG,QAAQC,MAAM,aAA1B,SACE,qBAAKD,GAAG,gBAAR,SACE,qBAAKC,MAAM,YAAX,SACE,qBAAKA,MAAM,iBAAX,SACE,sBAAKA,MAAM,oEAAX,UACE,qBAAKC,IAAI,uJAAuJC,IAAI,gBACpK,qBAAKF,MAAM,OAAX,SACE,uBAAMG,SA/BD,SAACC,GACpBA,EAAEC,iBACFf,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAEJ,MAAOA,EAAOE,SAAUA,MAC5CD,EAAS,IACTE,EAAY,KA2BgCY,MAAM,yBAApC,UAEE,sBAAKA,MAAM,aAAX,UACE,0CACA,uBAAOA,MAAM,eAAeM,YAAY,cAAcC,KAAK,OAAOC,KAAK,QAAQC,MAAOxB,EAAOyB,SAAU,SAACN,GAAD,OAAOlB,EAASkB,EAAEO,OAAOF,aAGlI,sBAAKT,MAAM,aAAX,UACE,6CACA,uBAAOA,MAAM,eAAeM,YAAY,iBAAiBC,KAAK,OAAOC,KAAK,WAAWC,MAAOtB,EAAUuB,SAAU,SAACN,GAAD,OAAOhB,EAAYgB,EAAEO,OAAOF,aAG9I,wBAAQF,KAAK,SAASP,MAAM,yBAA5B,uCC1CLY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b1fa582.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  const [email, setEmail] = useState(''); //input for email\n  const [password, setPassword] = useState(''); //input for password\n  const [item, setItem] = useState([]); //array of item that is storing everything\n\n  // Handle Submit function, when button is pressed, information is submitted\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setItem([...item, { email: email, password: password }]);\n    setEmail('');\n    setPassword('');\n  }\n\n  // Gets first items from localstorage and sets it to the 'item' in the array\n  // when the page first loads\n  useEffect(() => {\n    const data = localStorage.getItem('data');\n    if (data) {\n      setItem(JSON.parse(data));\n    }\n\n  }, [])\n\n  //Sets items to localstorage whenever the state changes\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(item));\n  })\n\n  return (\n    <div className=\"App\">\n      <section id=\"cover\" class=\"min-vh-100\">\n        <div id=\"cover-caption\">\n          <div class=\"container\">\n            <div class=\"row text-white\">\n              <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n                <img src=\"https://static.wixstatic.com/media/17765e_7c6784e02f43457aaaec07d168491650~mv2.png/v1/fill/w_42,h_40,al_c,q_85,usm_0.66_1.00_0.01/Muted%20Watts.webp\" alt=\"weekly logo\"/>\n                <div class=\"px-2\">\n                  <form onSubmit={handleSubmit} class=\"justify-content-center\">\n                    \n                    <div class=\"form-group\">\n                      <label>Email</label>\n                      <input class=\"form-control\" placeholder=\"Enter email\" type=\"text\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                    </div>\n                    \n                    <div class=\"form-group\">\n                      <label>Password</label>\n                      <input class=\"form-control\" placeholder=\"Enter password\" type=\"text\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                    </div>\n                    {/* <input type=\"submit\" /> */}\n                    <button type=\"submit\" class=\"btn btn-primary btn-lg\">Submit</button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}